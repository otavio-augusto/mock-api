#+title: /Controllers/

Estes são os /controllers/ do projeto.
#+begin_src plantuml :file .img/img1.png
@startuml
  component Model
  component View
  component Controller
  database Dados

interface response as "HTTP Response"
interface request as "HTTP Request"

component "Navegador" as navegador

navegador -> request: "     "
request --> Controller
Controller --> response
Model -> response: Serializa
response -> View: "     "
View -> navegador: Renderiza

Controller <-left-> Dados:"Read and Write"
@enduml
#+end_src
#+RESULTS:
[[file:.img/img1.png]]

* User Controller
** Rotas
*** TODO GET
Por sua natureza, devem existir duas rotas ~GET~, uma para retornar todos os usuários, e outro para retornar um especifico.

Essas rotas foram denominadas plural e singular, respectivamente.
#+begin_src js :tangle userController.js
//ROTA GET PLURAL
export function getUsers(req, res, next) {
  const message = {
    "message": "PLURAL GET ACKNOWLEDGED!"
  }
  res.status(201).send(message);
};

//ROTA GET SINGULAR
export function getUser(req, res, next) {
  const id = req.params.id
  const message = {
    "message": "SINGULAR GET ACKNOWLEDGED!",
    "id": id
  }
  res.status(201).send(message);
};
#+end_src
*** TODO PUT
#+begin_src js :tangle userController.js
export function putUser(req, res, next) {
  const message = {
    "message": `PUT USER ACKNOWLEDGED!`,
    "id": id
  }
  res.status(201).send(message);
};
#+end_src
*** TODO POST
#+begin_src js :tangle userController.js
export function postUser(req, res, next) {
  const id = req.params.id
  const message = {
    "message": `POST USER ACKNOWLEDGED!`,
    "id": id
  }
  res.status(201).send(message);
};
#+end_src
*** TODO DELETE
#+begin_src js :tangle userController.js
export function deleteUser(req, res, next) {
  const id = req.params.id
  const message = {
    "message": `DELETE USER ACKNOWLEDGED!`,
    "id": id
  }
  res.status(201).send(message);
};
#+end_src


* Theme Controller
** Rotas
*** TODO GET
#+begin_src js
export function getTheme(req, res, next){
  const id = req.params.id
  const message = {
    "message": "GET ACKNOWLEDGED!",
    "id": id
  }
  res.status(201).send(message);
}
#+end_src

#+RESULTS:

* COMMENT Metadados
#+PROPERTY: header-args :noeval
#+OPTIONS:
# local variables:
# ispell-local-dictionary: "pt_BR"
# end:
